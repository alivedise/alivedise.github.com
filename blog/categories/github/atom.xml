<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: github | Ascheriit]]></title>
  <link href="http://alivedise.github.com/blog/categories/github/atom.xml" rel="self"/>
  <link href="http://alivedise.github.com/"/>
  <updated>2013-02-23T17:37:35+08:00</updated>
  <id>http://alivedise.github.com/</id>
  <author>
    <name><![CDATA[Alive Kuo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[git] 心得(1) Submodule, Bitbucket]]></title>
    <link href="http://alivedise.github.com/blog/2012/02/15/git-submodule/"/>
    <updated>2012-02-15T23:32:00+08:00</updated>
    <id>http://alivedise.github.com/blog/2012/02/15/git-submodule</id>
    <content type="html"><![CDATA[<h1>Bitbucker</h1>

<h1>偶然間發現這個github的競爭者<a href="http://bitbucket.com">Bitbucket</a>推出了無限免費私有倉庫+無限硬碟空間，</h1>

<p>title: "[git] 心得(1) Submodule, Bitbucker"
date: 2012-02-15 23:32
comments: true</p>

<h2>categories: git,github </h2>

<h1>Bitbucker</h1>

<p>偶然間發現這個github的競爭者<a href="http://bitbucker.com">Bitbucker</a>推出了無限免費私有倉庫+無限硬碟空間，</p>

<blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>origin/master
於是有了一個想法：把不能說得project放到bitbucker，把好玩的open source放在github，兩者透過submodule互通！
畢竟工作上要用到大量的open source project，每次更新都要cp實在很累人。
在大部分專案都在github，而且他的介面也真的很好用的狀況下，在github上開repo還是有必要得！
而且還要能夠隨時跟原作者的repo同步！</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote>

<h1>Git submodule</h1>

<p>要達成這個目的還是得先了解一下submodule的用法，
以下是學到的事情。</p>

<h2>本地端起submodule</h2>

<pre><code>cd my_existing_repo
git add submodule git@github.com:alivedise/lab.git
git submodule init #啟動submodule
git submodule update #把submodule內容抓回本地端
git commit -a -m 'commited with submodule lab added!' #commit submodule的設定回自己的git remote
</code></pre>

<h2>別人更新他的repo時</h2>

<pre><code>git submodule update
#確認是你想要得內容
git commit -a -m 'commited with submodule lab updated.' #commit submodule新的版本號回去自己的git remote
</code></pre>

<h2>問題來了，如果別人的repo你自己會作修改該怎麼辦？</h2>

<p>我的作法：直接fork回自己的repo，將submodule重新指向自己的repo，自己來維護這份repo。</p>

<h2>別人跟自己同時都有更新repo時</h2>

<p>很簡單，利用add remote->fetch->merge->commit</p>

<pre><code>cd my_forked_submodule
git add remote upstream git@github.com:alivedise/lab.git
git fetch upstream
git merge origin master
</code></pre>

<h1>Reference</h1>

<ul>
<li><a href="http://blog.wu-boy.com/2011/09/introduction-to-git-submodule/">Git Submodule 介紹與使用</a></li>
<li><a href="http://www.slideshare.net/littlebtc/git-5528339">slideshare</a></li>
<li><a href="https://github.com/ginatrapani/ThinkUp/wiki/Developer-Guide%3A-Get-the-Source-Code-from-GitHub-and-Keep-It-Updated">Developer Guide: Get the Source Code from GitHub and Keep It Updated</a> 推薦！</li>
</ul>

]]></content>
  </entry>
  
</feed>
